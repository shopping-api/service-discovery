[versions]
## Plugin versions
springVersion = '3.3.4'
springDependencyManagementVersion = '1.1.6'
gitPropertiesVersion = '2.4.2'
axionReleaseVersion = '1.18.1'
lombokVersion = '8.6'
sonarqubeVersion = '5.1.0.4882'

## Library versions
eurekaServerVersion = '4.1.3'
owaspEncoderVersion = '1.2.3'

## Test Libraries
cucumberVersion = '7.18.0'
jacksonDataBindingVersion = '2.17.2'
prometheusScraperVersion = '0.23.0.Final'
googleGuavaVersion = '33.2.1-jre'

[plugins]
spring-boot = { id = 'org.springframework.boot', version.ref = 'springVersion' }
spring-dependency-management = { id = 'io.spring.dependency-management', version.ref = 'springDependencyManagementVersion' }
git-properties = { id = 'com.gorylenko.gradle-git-properties', version.ref = 'gitPropertiesVersion' }
axion-release = { id = 'pl.allegro.tech.build.axion-release', version.ref = 'axionReleaseVersion' }
lombok = { id = 'io.freefair.lombok', version.ref = 'lombokVersion' }
sonarqube = { id = 'org.sonarqube', version.ref = 'sonarqubeVersion' }
jacoco = { id = 'jacoco' }
application = { id = 'application' }
java = { id = 'java' }

[libraries]
# managed by spring management plugin
spring-boot-starter = { module = 'org.springframework.boot:spring-boot-starter' }
spring-boot-starter-test = { module = 'org.springframework.boot:spring-boot-starter-test' }
jakarta-servlet-api = { module = 'jakarta.servlet:jakarta.servlet-api' }
micrometer-prometheus = { module = 'io.micrometer:micrometer-registry-prometheus' }

# non-managed by spring management plugin
netflix-eureka-server = { module = 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server', version.ref = 'eurekaServerVersion' }
owasp-encoder = { module = 'org.owasp.encoder:encoder', version.ref = 'owaspEncoderVersion' }

# Test libraries
cucumber-spring = { module = 'io.cucumber:cucumber-spring', version.ref = 'cucumberVersion' }
cucumber-java = { module = 'io.cucumber:cucumber-java', version.ref = 'cucumberVersion' }
jackson-databing = { module = 'com.fasterxml.jackson.core:jackson-databind', version.ref = 'jacksonDataBindingVersion' }
prometheus-scraper = { module = 'org.hawkular.agent:prometheus-scraper', version.ref = 'prometheusScraperVersion' }
google-guava = {module = 'com.google.guava:guava', version.ref = 'googleGuavaVersion'}
